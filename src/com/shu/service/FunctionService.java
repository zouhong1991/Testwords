
package com.shu.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "FunctionService", targetNamespace = "http://com/", wsdlLocation = "http://localhost:9001/Service/Function?wsdl")
public class FunctionService
    extends Service
{

    private final static URL FUNCTIONSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("http://localhost:9001/Service/Function?wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        FUNCTIONSERVICE_WSDL_LOCATION = url;
    }

    public FunctionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FunctionService() {
        super(FUNCTIONSERVICE_WSDL_LOCATION, new QName("http://com/", "FunctionService"));
    }

    /**
     * 
     * @return
     *     returns Function
     */
    @WebEndpoint(name = "FunctionPort")
    public Function getFunctionPort() {
        return (Function)super.getPort(new QName("http://com/", "FunctionPort"), Function.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Function
     */
    @WebEndpoint(name = "FunctionPort")
    public Function getFunctionPort(WebServiceFeature... features) {
        return (Function)super.getPort(new QName("http://com/", "FunctionPort"), Function.class, features);
    }

}
